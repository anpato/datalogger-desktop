name: 'Release application'
on:
  push:
    tags:
      - '*'
jobs:
  create-release:
    name: Create Release
    runs-on: ['ubuntu-latest']
    outputs:
      tag: ${{github.ref}}
      release: release/${{github.ref_name}}
    steps:
      - name: Create Release
        uses: actions/create-release@v1
        id: release
        with:
          draft: false
          prerelease: false
          release_name: release/${{ github.ref_name }}
          tag_name: ${{ github.ref }}

  # build-app:
  #   env:
  #     env: ${{ needs.target-setup.outputs.env }}
  #     filename: 'datalogger-${{ matrix.build.type }}-${{ needs.target-setup.outputs.env }}'
  #     output: 'build/bin'
  #   name: 'Build | ${{ matrix.build.os }} ${{ matrix.build.platform }}'
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       build:
  #         [
  #           {
  #             name: 'Datalogger',
  #             platform: 'windows/amd64',
  #             type: windows-amd64,
  #             os: 'windows-latest',
  #             file: 'datalogger-${{ needs.target-setup.outputs }}.exe',
  #             outdir: 'windows'
  #           },
  #           {
  #             name: 'Datalogger',
  #             platform: 'darwin/universal',
  #             type: macos,
  #             os: 'macos-latest',
  #             file: 'datalogger-macos-${{ needs.target-setup.outputs.env }}.tar',
  #             outdir: 'macos'
  #           }
  #         ]
  #   runs-on: ${{matrix.build.os}}
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Set LDFlags
  #       shell: bash
  #       run: |
  #         echo "ldFlags=-s -w -h -H windowsgui -X 'main.version=${{ github.sha }}'" >> $GITHUB_ENV

  #     - name: Install Go
  #       uses: actions/setup-go@v5
  #       with:
  #         go-version: 1.22.4

  #     - name: 'Install Pnpm'
  #       uses: pnpm/action-setup@v4
  #       with:
  #         version: '8.14'

  #     - name: Setup Node 20
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 20

  #     - name: Get Wails
  #       run: go install github.com/wailsapp/wails/v2/cmd/wails@v2.9.1

  #     - name: Build Wails app
  #       run: |
  #         wails build -platform ${{ matrix.build.platform }}

  #     - name: Package application
  #       if: matrix.build.type == 'macos' && github.event_name != 'pull_request'
  #       run: |
  #         cd build/bin
  #         tar -czf ${{ matrix.build.file }} Datalogger.app

  #     - name: Upload windows build artifacts
  #       if: github.event_name != 'pull_request' && matrix.build.type == 'windows-amd64'
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: ${{ matrix.build.file }}
  #         path: ${{ env.output }}

  #     - name: Upload macos build artifacts
  #       if: github.event_name != 'pull_request' && matrix.build.type == 'macos'
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: ${{ matrix.build.file }}
  #         path: ${{ env.output }}/${{matrix.build.file}}
