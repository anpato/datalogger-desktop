name: 'On Demand'
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag vX.X.X'
        type: string
        required: true

jobs:
  create-release:
    name: Create release ${{ inputs.version }}
    runs-on: ['ubuntu-latest']
    steps:
      - uses: actions/checkout@v4
      # - name: Create Release
      #   uses: softprops/action-gh-release@v2
      #   id: release
      #   with:
      #     name: release/${{ inputs.version }}
      #     tag_name: ${{ inputs.version }}
      #     fail_on_unmatched_files: true
      #     make_latest: 'true'
      #     generate_release_notes: true
      - name: Update App Version
        shell: bash
        run: |
          git config --global user.email "gha@datalogger.app"
          git config --global user.name "GHA"  
          echo "VERSION=${{ inputs.version }}" >> .env
          git add .env
          git commit -m 'update version'
          git push origin/${{ github.ref_name }}

  build-app:
    needs: ['create-release']
    name: 'Build Application Binary version: ${{ github.sha }}'
    runs-on: ${{matrix.build.os}}
    env:
      output: 'build/bin'
    strategy:
      fail-fast: false
      matrix:
        build:
          [
            {
              name: 'Datalogger',
              platform: 'windows/amd64',
              os: 'windows-latest',
              file: 'datalogger-${{ inputs.version }}-windows-amd64',
              outfile: 'Datalogger-amd64-installer.exe'
            },
            {
              name: 'Datalogger',
              platform: 'darwin/universal',
              os: 'macos-latest',
              file: 'datalogger-${{ inputs.version }}-macos',
              outfile: 'Datalogger.app'
            }
          ]
    steps:
      - uses: actions/checkout@v4

      - name: 'Install Pnpm'
        uses: pnpm/action-setup@v4
        with:
          version: '8.14'

      - name: Build wails
        uses: dAppServer/wails-build-action@v2.2
        id: build
        with:
          build-name: ${{ matrix.build.name }}
          build-platform: ${{ matrix.build.platform }}
          wails-version: v2.9.1
          package: false
          go-version: '1.22.4'
          node-version: 20

      - name: Package application
        shell: bash
        run: |
          cd build/bin
          tar -czvf ${{ matrix.build.file }}.tar ${{ matrix.build.outfile }}

      - name: Upload build artifacts
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.build.file }}
          path: ${{ env.output }}/${{ matrix.build.file }}.tar

      # - name: Upload assets
      #   shell: bash
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     gh release upload ${{ inputs.version }} build/bin/${{ matrix.build.file }}.tar
