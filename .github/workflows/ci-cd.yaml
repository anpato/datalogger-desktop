name: 'Build application'
on:
  workflow_dispatch:
    inputs:
      manual:
        description: 'Default value for tiggered workflows'
        type: boolean
        required: false
        default: true
  pull_request:
    branches:
      - develop
  push:
    branches:
      - develop
      - main
jobs:
  target-setup:
    name: 'Set up ENV'
    runs-on: 'windows-latest'
    outputs:
      env: ${{ steps.setvars.outputs.env }}
    steps:
      - name: Set build environment
        id: setvars
        shell: bash
        run: |
          if [[ ${{ github.ref_name }} =~ develop || ${{ github.event_name }} =~ pull_request ]]; then
            echo "env=development" >> $GITHUB_OUTPUT
          elif [[ ${{ github.ref_name }} =~ main ]]; then
            echo "env=production" >> $GITHUB_OUTPUT
          fi

  build-app:
    needs: ['target-setup']
    environment: ${{ needs.target-setup.outputs.env }}
    env:
      env: ${{ needs.target-setup.outputs.env }}
    name: "Build Application Binary's | ${{ matrix.build.os }} ${{ matrix.build.platform }}"
    strategy:
      fail-fast: false
      matrix:
        build:
          - name: 'Datalogger'
            platform: 'linux/amd64'
            os: 'ubuntu-latest'
          - name: 'Datalogger'
            platform: 'windows/amd64'
            os: 'windows-latest'
          - name: 'Datalogger'
            platform: 'darwin/amd64'
            os: 'macos-latest'
          - name: 'Datalogger'
            platform: 'darwin/arm64'
            os: 'macos-latest'
    runs-on: ${{matrix.build.os}}
    steps:
      - uses: actions/checkout@v4

      - name: Set LDFlags
        shell: bash
        run: |
          echo "ldFlags=-s -w -h -H windowsgui -X 'main.version=${{ github.sha }}'" >> $GITHUB_ENV

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.4

      - name: 'Install Pnpm'
        uses: pnpm/action-setup@v4
        with:
          version: '8.14'

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Build wails
        uses: dAppServer/wails-build-action@v2.2
        id: build
        with:
          build-name: ${{ matrix.build.name }}
          build-platform: ${{ matrix.build.platform }}
          # package: true
          sign: false
          wails-version: 'v2.9.1'
          go-version: '1.22'

      - name: Upload build artifacts
        if: github.event_name != 'pull_request' || inputs.manual != true
        uses: actions/upload-artifact@v4
        with:
          name: ${{matrix.build.name}}-${{matrix.build.os}}-${{matrix.build.platform}}
          path: build/bin/*
